language: php
services: docker
php:
- 7.0
env:
  DOCKER_COMPOSE_VERSION: 1.6.2
  APP_ENV: local
  APP_DEBUG: true
  APP_KEY: SomeRandomString
  DB_CONNECTION: pgsql
  DB_HOST: postgres
  DB_PORT: 5432
  DB_DATABASE: service_db
  DB_USERNAME: service_user
  DB_PASSWORD: P@ssw0rd
  CACHE_DRIVER: array
  QUEUE_DRIVER: sync
before_install:
  - export DOCKER_REPO="${TRAVIS_REPO_SLUG,,}"
  - export IMAGE_SLUG="$TRAVIS_BRANCH.${TRAVIS_COMMIT::8}.${TRAVIS_BUILD_ID}"
  # Upgrade docker/docker-compose versions so we can use v2 of the Dockerfile format
  - docker -v
  - sudo apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install docker-engine
  - docker -v
  - sudo rm /usr/local/bin/docker-compose
  - curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m`" > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - cp .env.example .env
  # Stop the postgres instance travis sets up automatically
  - sudo /etc/init.d/postgresql stop
  # set env vars in the build settings to interact with repositories
  # see https://docs.travis-ci.com/user/environment-variables/#Defining-Variables-in-Repository-Settings
  - docker login -e="$DOCKER_EMAIL" -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
  # Start the docker stuff
  - docker-compose -v
  - docker-compose up -d
  - sleep 4
  - docker-compose ps
install:
  # Install dev php dependencies
  - docker run -i -v $(pwd):/var/www/html $(docker images -q realpage/builder:composer-1) composer install --no-interaction --prefer-dist
  # Install production-only npm dependencies & run gulp
  - docker run -i -v $(pwd):/var/www/html $(docker images -q realpage/builder:npm-3) npm install --silent
  - docker run -i -v $(pwd):/var/www/html $(docker images -q realpage/builder:npm-3) gulp --production
script:
  # Ensure phpcs triggers a failing build
  - docker exec -it $(docker-compose ps -q fpm) vendor/bin/phpcs --config-set ignore_warnings_on_exit 1
  # Ensure breaking PSR2 compliance fails in CI
  - docker exec -it $(docker-compose ps -q fpm) vendor/bin/phpcs --standard=PSR2 --ignore=app/Http/routes.php app
  # Seed database
  - docker exec -it $(docker-compose ps -q fpm) php artisan migrate --seed
  # Run tests
  - docker exec -it $(docker-compose ps -q fpm) vendor/bin/phpunit
  # Clean up pre-packaged stuff so the Laravel instance is clean and re-run tests to make sure we didn't break something
  - php artisan clean:template -f
  - docker exec -it $(docker-compose ps -q fpm) vendor/bin/phpunit
after_success:
  # Remove node dependencies
  - docker run -i -v $(pwd):/var/www/html $(docker images -q realpage/builder:npm-3) rm -rf node_modules
  # Revert to production-only php dependencies
  - if [[ $TRAVIS_BRANCH == 'master' || $TRAVIS_BRANCH == 'staging' || $TRAVIS_BRANCH == 'develop' ]]; then docker run -i -v $(pwd):/var/www/html $(docker images -q realpage/builder:composer-1-beta1) composer install --no-interaction --no-dev --prefer-dist ; fi
  # Build route/config cache
  - if [[ $TRAVIS_BRANCH == 'master' || $TRAVIS_BRANCH == 'staging' || $TRAVIS_BRANCH == 'develop' ]]; then docker exec -it $(docker-compose ps -q fpm) php artisan route:cache ; fi
  - if [[ $TRAVIS_BRANCH == 'master' || $TRAVIS_BRANCH == 'staging' || $TRAVIS_BRANCH == 'develop' ]]; then docker exec -it $(docker-compose ps -q fpm) php artisan config:cache ; fi
  # Deployable image tags must be in format: [service].[branch].[commit-hash].[timestamp]
  - if [[ $TRAVIS_BRANCH == 'master' || $TRAVIS_BRANCH == 'staging' || $TRAVIS_BRANCH == 'develop' ]]; then docker tag "${DOCKER_REPO}:fpm" "${DOCKER_REPO}:fpm.${IMAGE_SLUG}" && docker push "${DOCKER_REPO}:fpm.${IMAGE_SLUG}" ; fi
after_script:
- docker images
notifications:
  slack:
    secure: hlwOkg0XGJBxhAb/6DIHcljEprJCj7Ilv9vEjyqDMjMx7bhOZ8dOb3VEg+ao6UN4eNNNfcQkS0gqvOt5YfY3CZCOrDR7mJnSL5GNGVxkbqNKaQ2bqCn5CCB0Jjb5Jwj+q5x/RB7ktWvP49KnPeiHqouVnQtiLAtPcV9hoYG0pnoI/NCbywukIN35fs5WYLWm/ozdqsaH91vVtpq3OmarKUiIxXu4/Ojy7tn+lWHMQmB+MRvE+QC0c1nWLeTNNaZ/PWEghmiuXWSSurvyiqVUQA81tSGC7WcX6ObAG02gt4LTG2w+bO42/yKjJhRhfkN8LKnTnsI1RLzJy0KwZ/XkYtdQqTjcYRqC75DWGAONGdizG9VwUtIyY3OXGXFi1oeGCxaFlma2xqD6a6Haae+MKmkLUuFvy3lEYPtC9/iSziNkpozjgC+1vYLudOkfftvKOUz3CzhsVzVTTzBAbodZAP/7v4wPEbYZ0G3nTs25nedel/6FCtH+BonS19SUb9UqcWwBx5d8XyHbaECPtXf+5iPVOFDYURLlYpLhNx+DszCYorKcQOZ7/MeONK2QPw5Ddd9z4qAQli+JPlXl0IG4ELt3QKQnVkpEWA+mAdS6j6I5oIYaxm9er/j4+tWAb/GmXHcWvvMdo/BxdUvdVAZ91JvoKNkiMV2M/sri0beVdmM=
